#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include "params.h"
#include "kem.h"
#include "poly.h"

#define NTESTS 1

void test_kem()
{
  unsigned int i, j;
  unsigned char k1[FPTRU_SHAREDKEYBYTES], k2[FPTRU_SHAREDKEYBYTES];
  unsigned char pk[FPTRU_KEM_PUBLICKEYBYTES]={0x7,0x11,0x8,0x60,0xe9,0x1c,0x51,0x4,0x53,0x48,0x27,0x73,0x6e,0x29,0x4e,0x64,0x6c,0xd0,0xc2,0xa5,0x5c,0xc2,0x8,0x6f,0x84,0xde,0xdb,0x96,0xe7,0x6d,0x45,0xf,0x71,0xc1,0x31,0xba,0xf7,0x98,0x18,0x64,0x38,0xe9,0xa4,0x6c,0x1d,0xac,0x48,0xee,0x3,0x6e,0x5f,0x99,0x1c,0x81,0x62,0x5c,0x38,0xe,0xf7,0xe,0xaf,0x14,0x1a,0x5f,0xc4,0xcb,0xd5,0xd0,0xc6,0x2d,0x82,0xed,0x4b,0x92,0xd,0x8a,0x6a,0xea,0x1b,0xae,0x3,0x3b,0x4e,0xdb,0x6f,0x43,0x9a,0xd,0xf3,0x7b,0x40,0xb7,0x3d,0x1e,0x24,0xf2,0x48,0x9c,0x2b,0x69,0xc2,0x4,0xfa,0x24,0xd2,0xd1,0xe0,0x79,0x26,0x11,0xd0,0x6c,0xbc,0xf6,0xf3,0xe8,0x65,0x55,0x7a,0xeb,0x33,0x47,0x6c,0xa3,0x83,0x50,0x3b,0x41,0x69,0xa2,0x94,0xed,0x83,0x42,0x83,0x57,0xd9,0x4,0xdb,0x44,0xd0,0x9a,0x1a,0xc4,0xc3,0x9d,0xb6,0x3d,0xd0,0x75,0x20,0xd6,0xbc,0xf6,0xae,0xaf,0x26,0x39,0xcc,0x97,0x29,0xa9,0x68,0x79,0x50,0x9d,0x68,0xdd,0x7f,0xbe,0x0,0x42,0x1e,0x50,0x36,0xdb,0x69,0x40,0xc5,0xe6,0xb7,0xc,0x2a,0x2d,0x76,0x6a,0x3,0x7c,0xb1,0x19,0xba,0x9f,0x36,0x28,0x6,0x8e,0x9f,0xd2,0xc4,0xe6,0x1e,0xb8,0x99,0x38,0x70,0x91,0xf2,0x52,0xd6,0x50,0x1c,0xd2,0xfa,0x3c,0xdc,0xb7,0x57,0xcb,0x9c,0x5e,0xf7,0x86,0x7d,0xba,0xe8,0x58,0xa,0x33,0x18,0xa8,0xc6,0x49,0x45,0xf2,0xf8,0x4b,0x86,0x54,0x1,0x68,0xb9,0x63,0xb6,0xd,0x7,0x68,0xba,0x91,0xe1,0x9f,0xaf,0x85,0xb8,0x5f,0x84,0x69,0xc1,0x31,0x2b,0x6e,0xf0,0x36,0x1,0x1c,0xc6,0x2f,0x81,0xe5,0x7a,0x93,0xa8,0x39,0x4a,0x7e,0x60,0xb,0xe6,0x22,0x5d,0x19,0x3a,0x4e,0xb1,0x1c,0x99,0xe6,0x94,0xc5,0x58,0xfe,0xb8,0x48,0x67,0xf2,0xc3,0xf5,0xb6,0x2a,0xfc,0x5d,0x79,0x92,0x73,0xc5,0xdf,0xd2,0x6b,0x17,0xd0,0x95,0x3d,0x90,0x7b,0x2a,0x71,0x58,0x6c,0x9d,0xa6,0x31,0x76,0xcc,0x3e,0x92,0xdd,0x13,0x9a,0xfc,0x87,0xd5,0xbb,0xd7,0xec,0x40,0x19,0x52,0xdc,0x84,0x20,0xcb,0x20,0x70,0xfc,0xcf,0xab,0x95,0xe2,0x25,0x36,0xd9,0x7a,0x4c,0x81,0x1d,0x5,0x6d,0x5,0x86,0xc1,0xa7,0x58,0xe9,0x59,0xdd,0x55,0x19,0x6d,0x7e,0x51,0x44,0x9f,0x3,0x63,0xb8,0x77,0xa5,0x7f,0x9d,0x7e,0xc9,0xd0,0xaa,0xd8,0xc,0x3,0xb4,0x88,0x7b,0xe3,0x33,0xa7,0x7f,0xa4,0xe4,0x30,0x63,0x34,0xdb,0xe7,0xd5,0xcd,0xc6,0x9a,0xa7,0xc1,0xf7,0x5e,0xfb,0xe6,0x52,0xd,0xff,0xde,0x39,0x2e,0x17,0x14,0xba,0x82,0x92,0x39,0xe4,0xb5,0xb4,0xa,0xa7,0x6d,0x4,0x14,0x39,0x2,0x6f,0x31,0x51,0x0,0x22,0x34,0x30,0xd,0x5d,0x19,0x57,0xe2,0xa2,0x7c,0x57,0x33,0xe7,0x44,0x14,0x2b,0xa7,0x7e,0x19,0x5b,0x95,0x32,0xfd,0xf0,0x9a,0x16,0xb0,0x68,0x45,0x3f,0x55,0xdc,0x51,0x3a,0x75,0xfe,0x6c,0xa1,0xef,0x47,0x7c,0xac,0xb3,0x2c,0x69,0x71,0x48,0xe2,0xb1,0xc,0xdc,0x22,0xdf,0xc5,0x36,0xb6,0x3d,0x18,0xd5,0x64,0x14,0x1e,0x95,0x91,0xdf,0xca,0x3,0xa9,0x16,0x84,0x68,0xdf,0x9,0x16,0x75,0x25,0xb7,0xdb,0xf8,0x81,0x1,0x5b,0x42,0x5a,0xaa,0x81,0xc,0x15,0xf7,0x59,0xc,0x8f,0x3d,0xf8,0xd8,0x5e,0xca,0x3,0x90,0x36,0xb,0x22,0x26,0xd4,0xb5,0x65,0xf4,0x17,0xe9,0x26,0xb4,0xc7,0x8e,0x90,0xa9,0x5f,0x2e,0x8b,0xc6,0xaf,0xb0,0xce,0x94,0x8b,0x63,0x21,0x85,0x40,0xb,0x40,0xfe,0x6b,0x1f,0x3e,0x43,0x1,0xa0,0x4d,0x88,0x91,0x32,0xfb,0x75,0x37,0x83,0x1f,0x6e,0xd1,0xbe,0x79,0x20,0xd2,0x4d,0xd2,0x84,0xed,0x93,0xe3,0x4b,0xf,0xdb,0xab,0xb,0x8e,0xa2,0x6b,0xc6,0x1a,0x8d,0x57,0x46,0x7f,0xf0,0xfe,0x4a,0x34,0xf5,0x2f,0x1e,0x91,0xc7,0xaf,0xf0,0x1e,0xa7,0x93,0xab,0xc7,0x32,0x90,0x1f,0x32,0xcd,0x9f,0x88,0x28,0x7e,0xef,0x95,0xf4,0x5e,0x29,0x6,0xba,0x16,0xf9,0x11,0xa8,0xad,0x33,0x29,0x86,0x92,0x57,0x60,0x61,0x7f,0xfc,0x99,0xbc,0xc7,0x19,0x80,0x53,0x49,0xd6,0x3d,0x6b,0x8c,0x53,0xa6,0x36,0x51,0x1a,0xeb,0x3f,0xcc,0xf4,0xf7,0xe4,0xcc,0x6d,0x9,0xa0,0xae,0x71,0xb3,0x88,0x48,0xf3,0xd2,0x79,0xab,0x13,0x68,0x2f,0xc8,0x5d,0x91,0x17,0xa8,0x12,0x5,0x95,0x18,0x9d,0xb9,0x5e,0x4f,0x6d,0xb9,0xf6,0x71,0x8,0x7,0x81,0xf2,0x5f,0xbd,0xb8,0x16,0xd3,0xe7,0xb3,0x36,0x9c,0xad,0x5b,0xbf,0xcd,0x2d,0x4f,0x3d,0x62,0x80,0x62,0x96,0x10,0x37,0xf6,0x94,0xe9,0x1e,0x23,0xda,0xdc,0xef,0x94,0x98,0x1b,0x88,0xf3,0x50,0xe4,0x9b,0xc1,0x29,0xfa,0xcc,0xa1,0xda,0x3c,0x94,0xa6,0xf4,0xaf,0xad,0xa4,0x6f,0x6e,0xd0,0x16,0x2f,0xac,0x6d,0xe1,0x95,0xfa,0xb9,0x98,0x7f,0x1c,0x38,0x2,0xc9,0x76,0x11,0xa4,0x94,0xa6,0xb7,0xc3,0xaa,0xa7,0x53,0x94,0x31,0xf2,0x67,0x90,0xea,0x3,0x6b,0x3e,0x80,0x76,0xbf,0x2e,0xf7,0x83,0x6d,0xd6,0xe3,0x10,0x5d,0xd4,0xc6,0xb2,0xa9,0x2,0x67,0x86,0x3f,0x6,0x5b,0x95,0xd4,0x11,0x4e,0xaa,0x4d,0xa2,0x73,0x33,0xa0,0xa,0xa9,0xf8,0x50,0xea,0x26,0x13,0x25,0xed,0xb,0x7c,0x8f,0x60,0xa4,0xa8,0x50,0x72,0x55,0x9c,0x45,0x1,0x65,0x1,0xdd,0x2,0xa7,0x9d,0x97,0xa8,0xc7,0x92,0x39,0x1c,0x93,0x35,0x5d,0xa3,0xe1,0x44,0x2a,0x91,0x36,0x54,0x5a,0x3e,0x16,0x25,0xa9,0x22,0x1e,0x21,0x1c,0xb4,0x54,0x9d,0x89,0x9c,0x7f,0x3e,0x57,0x19,0x17,0x2c,0x7d,0x3,0x17,0x64,0x58,0x4d,0x78,0xf2,0xd3,0x5e,0x5e,0x6d,0xe2,0x4e,0x5a,0x89,0xaf,0x7b,0xdd,0xe3,0xed,0xeb,0x88,0xfc,0x43,0x47,0xf6,0x94,0x99,0x5,0x7,0x3a,0xcf,0x59,0x95,0xae,0xd,0x18,0x18,0xb6,0x33,0x3d,0x94,0x4b,0x3a,0xba,0xb2,0x42,0xb6,0x39,0x1b,0x2d,0x6,0x2c,0xff,0xd2,0xcc,0x25,0xd4,0x26,0xf0,0x21,0xeb,0x2b,0xd6,0x87,0x50,0xa8,0xf4,0x19,0x84,0x37,0x37,0x63,0x67,0x13,0x76,0x16,0x61,0x85,0xd,0x90,0x21,0x72,0xa7,0x86,0x26,0x5b,0x6b,0x3b,0xd8,0x5c,0xa2,0x3e,0xff,0x46,0xfe,0x58,0xcb,0x38,0x0,};
  unsigned char sk[FPTRU_KEM_SECRETKEYBYTES]={0x54,0x55,0x37,0x77,0x79,0x79,0x55,0x79,0x33,0x55,0x99,0x75,0x7b,0x91,0x59,0x39,0x77,0x95,0xb5,0x95,0x9b,0xb5,0x5b,0x5b,0x15,0x95,0x57,0x39,0x57,0x95,0x9b,0x5b,0x53,0x33,0x37,0x93,0x59,0x77,0x55,0x39,0x79,0x57,0x99,0x57,0x75,0x97,0x39,0x39,0x95,0x77,0x59,0x55,0x95,0x55,0x57,0x35,0x97,0x79,0x73,0x59,0x97,0x99,0x7b,0x77,0x55,0x39,0x35,0x99,0xb7,0xb9,0xbb,0x33,0x77,0x73,0x79,0x95,0x9b,0x79,0xd7,0x55,0x39,0x77,0x7b,0xb5,0x3d,0x55,0x57,0x77,0x55,0x79,0x9b,0x55,0x9d,0x77,0x5b,0x3b,0x39,0x99,0x99,0x55,0x73,0x79,0xb9,0x75,0x77,0x5d,0x35,0x57,0x77,0xb3,0x57,0x79,0x77,0x57,0x95,0xb7,0x17,0x57,0x79,0x53,0x99,0x73,0x33,0x79,0x37,0x75,0x71,0x99,0x95,0x75,0x73,0xb3,0x57,0x17,0xbb,0x71,0x5b,0x35,0x55,0x77,0x39,0x57,0xb7,0x77,0x95,0x7d,0x99,0x99,0x37,0x57,0x75,0x35,0x55,0x95,0x75,0x75,0xb7,0x93,0x79,0x71,0x79,0x35,0x97,0x79,0x75,0x17,0xd9,0x77,0x75,0x77,0x57,0x53,0xb7,0x59,0x39,0x55,0x75,0xb5,0x93,0x75,0xb5,0x59,0x95,0x7b,0x99,0x75,0x9b,0x57,0x57,0x57,0x57,0x55,0x59,0x95,0x95,0x55,0x99,0x55,0xdb,0x55,0xbb,0x95,0x99,0x95,0x15,0xb9,0xbb,0x9b,0x75,0x79,0xb9,0xb7,0x99,0x59,0xb3,0x57,0x55,0x75,0xb9,0x79,0x77,0x5b,0x57,0x7b,0x57,0xd5,0x37,0xb1,0x97,0x95,0x99,0x9d,0x7b,0x99,0x97,0x95,0x39,0x39,0x3b,0x57,0x95,0x7b,0x75,0x3d,0x7b,0x97,0x73,0x57,0x53,0x75,0x55,0x55,0xb5,0x57,0x73,0x59,0x77,0x77,0x77,0x77,0x59,0x99,0x57,0x75,0x99,0x77,0x79,0x75,0x99,0x39,0x3b,0xb5,0x79,0x75,0x75,0x75,0x91,0x55,0x3b,0x93,0x59,0x71,0x99,0x5b,0x95,0x39,0x73,0x11,0x35,0x97,0x55,0x99,0x55,0x59,0x57,0x7b,0x55,0x17,0x55,0xb9,0xb5,0xb7,0xb9,0xb9,0x39,0x79,0x73,0xb9,0x71,0x77,0x97,0x97,0xbb,0xb7,0xb5,0x57,0x57,0xb9,0x97,0x95,0x97,0x79,0xb9,0x75,0xb9,0xb7,0x5,0x7,0x11,0x8,0x60,0xe9,0x1c,0x51,0x4,0x53,0x48,0x27,0x73,0x6e,0x29,0x4e,0x64,0x6c,0xd0,0xc2,0xa5,0x5c,0xc2,0x8,0x6f,0x84,0xde,0xdb,0x96,0xe7,0x6d,0x45,0xf,0x71,0xc1,0x31,0xba,0xf7,0x98,0x18,0x64,0x38,0xe9,0xa4,0x6c,0x1d,0xac,0x48,0xee,0x3,0x6e,0x5f,0x99,0x1c,0x81,0x62,0x5c,0x38,0xe,0xf7,0xe,0xaf,0x14,0x1a,0x5f,0xc4,0xcb,0xd5,0xd0,0xc6,0x2d,0x82,0xed,0x4b,0x92,0xd,0x8a,0x6a,0xea,0x1b,0xae,0x3,0x3b,0x4e,0xdb,0x6f,0x43,0x9a,0xd,0xf3,0x7b,0x40,0xb7,0x3d,0x1e,0x24,0xf2,0x48,0x9c,0x2b,0x69,0xc2,0x4,0xfa,0x24,0xd2,0xd1,0xe0,0x79,0x26,0x11,0xd0,0x6c,0xbc,0xf6,0xf3,0xe8,0x65,0x55,0x7a,0xeb,0x33,0x47,0x6c,0xa3,0x83,0x50,0x3b,0x41,0x69,0xa2,0x94,0xed,0x83,0x42,0x83,0x57,0xd9,0x4,0xdb,0x44,0xd0,0x9a,0x1a,0xc4,0xc3,0x9d,0xb6,0x3d,0xd0,0x75,0x20,0xd6,0xbc,0xf6,0xae,0xaf,0x26,0x39,0xcc,0x97,0x29,0xa9,0x68,0x79,0x50,0x9d,0x68,0xdd,0x7f,0xbe,0x0,0x42,0x1e,0x50,0x36,0xdb,0x69,0x40,0xc5,0xe6,0xb7,0xc,0x2a,0x2d,0x76,0x6a,0x3,0x7c,0xb1,0x19,0xba,0x9f,0x36,0x28,0x6,0x8e,0x9f,0xd2,0xc4,0xe6,0x1e,0xb8,0x99,0x38,0x70,0x91,0xf2,0x52,0xd6,0x50,0x1c,0xd2,0xfa,0x3c,0xdc,0xb7,0x57,0xcb,0x9c,0x5e,0xf7,0x86,0x7d,0xba,0xe8,0x58,0xa,0x33,0x18,0xa8,0xc6,0x49,0x45,0xf2,0xf8,0x4b,0x86,0x54,0x1,0x68,0xb9,0x63,0xb6,0xd,0x7,0x68,0xba,0x91,0xe1,0x9f,0xaf,0x85,0xb8,0x5f,0x84,0x69,0xc1,0x31,0x2b,0x6e,0xf0,0x36,0x1,0x1c,0xc6,0x2f,0x81,0xe5,0x7a,0x93,0xa8,0x39,0x4a,0x7e,0x60,0xb,0xe6,0x22,0x5d,0x19,0x3a,0x4e,0xb1,0x1c,0x99,0xe6,0x94,0xc5,0x58,0xfe,0xb8,0x48,0x67,0xf2,0xc3,0xf5,0xb6,0x2a,0xfc,0x5d,0x79,0x92,0x73,0xc5,0xdf,0xd2,0x6b,0x17,0xd0,0x95,0x3d,0x90,0x7b,0x2a,0x71,0x58,0x6c,0x9d,0xa6,0x31,0x76,0xcc,0x3e,0x92,0xdd,0x13,0x9a,0xfc,0x87,0xd5,0xbb,0xd7,0xec,0x40,0x19,0x52,0xdc,0x84,0x20,0xcb,0x20,0x70,0xfc,0xcf,0xab,0x95,0xe2,0x25,0x36,0xd9,0x7a,0x4c,0x81,0x1d,0x5,0x6d,0x5,0x86,0xc1,0xa7,0x58,0xe9,0x59,0xdd,0x55,0x19,0x6d,0x7e,0x51,0x44,0x9f,0x3,0x63,0xb8,0x77,0xa5,0x7f,0x9d,0x7e,0xc9,0xd0,0xaa,0xd8,0xc,0x3,0xb4,0x88,0x7b,0xe3,0x33,0xa7,0x7f,0xa4,0xe4,0x30,0x63,0x34,0xdb,0xe7,0xd5,0xcd,0xc6,0x9a,0xa7,0xc1,0xf7,0x5e,0xfb,0xe6,0x52,0xd,0xff,0xde,0x39,0x2e,0x17,0x14,0xba,0x82,0x92,0x39,0xe4,0xb5,0xb4,0xa,0xa7,0x6d,0x4,0x14,0x39,0x2,0x6f,0x31,0x51,0x0,0x22,0x34,0x30,0xd,0x5d,0x19,0x57,0xe2,0xa2,0x7c,0x57,0x33,0xe7,0x44,0x14,0x2b,0xa7,0x7e,0x19,0x5b,0x95,0x32,0xfd,0xf0,0x9a,0x16,0xb0,0x68,0x45,0x3f,0x55,0xdc,0x51,0x3a,0x75,0xfe,0x6c,0xa1,0xef,0x47,0x7c,0xac,0xb3,0x2c,0x69,0x71,0x48,0xe2,0xb1,0xc,0xdc,0x22,0xdf,0xc5,0x36,0xb6,0x3d,0x18,0xd5,0x64,0x14,0x1e,0x95,0x91,0xdf,0xca,0x3,0xa9,0x16,0x84,0x68,0xdf,0x9,0x16,0x75,0x25,0xb7,0xdb,0xf8,0x81,0x1,0x5b,0x42,0x5a,0xaa,0x81,0xc,0x15,0xf7,0x59,0xc,0x8f,0x3d,0xf8,0xd8,0x5e,0xca,0x3,0x90,0x36,0xb,0x22,0x26,0xd4,0xb5,0x65,0xf4,0x17,0xe9,0x26,0xb4,0xc7,0x8e,0x90,0xa9,0x5f,0x2e,0x8b,0xc6,0xaf,0xb0,0xce,0x94,0x8b,0x63,0x21,0x85,0x40,0xb,0x40,0xfe,0x6b,0x1f,0x3e,0x43,0x1,0xa0,0x4d,0x88,0x91,0x32,0xfb,0x75,0x37,0x83,0x1f,0x6e,0xd1,0xbe,0x79,0x20,0xd2,0x4d,0xd2,0x84,0xed,0x93,0xe3,0x4b,0xf,0xdb,0xab,0xb,0x8e,0xa2,0x6b,0xc6,0x1a,0x8d,0x57,0x46,0x7f,0xf0,0xfe,0x4a,0x34,0xf5,0x2f,0x1e,0x91,0xc7,0xaf,0xf0,0x1e,0xa7,0x93,0xab,0xc7,0x32,0x90,0x1f,0x32,0xcd,0x9f,0x88,0x28,0x7e,0xef,0x95,0xf4,0x5e,0x29,0x6,0xba,0x16,0xf9,0x11,0xa8,0xad,0x33,0x29,0x86,0x92,0x57,0x60,0x61,0x7f,0xfc,0x99,0xbc,0xc7,0x19,0x80,0x53,0x49,0xd6,0x3d,0x6b,0x8c,0x53,0xa6,0x36,0x51,0x1a,0xeb,0x3f,0xcc,0xf4,0xf7,0xe4,0xcc,0x6d,0x9,0xa0,0xae,0x71,0xb3,0x88,0x48,0xf3,0xd2,0x79,0xab,0x13,0x68,0x2f,0xc8,0x5d,0x91,0x17,0xa8,0x12,0x5,0x95,0x18,0x9d,0xb9,0x5e,0x4f,0x6d,0xb9,0xf6,0x71,0x8,0x7,0x81,0xf2,0x5f,0xbd,0xb8,0x16,0xd3,0xe7,0xb3,0x36,0x9c,0xad,0x5b,0xbf,0xcd,0x2d,0x4f,0x3d,0x62,0x80,0x62,0x96,0x10,0x37,0xf6,0x94,0xe9,0x1e,0x23,0xda,0xdc,0xef,0x94,0x98,0x1b,0x88,0xf3,0x50,0xe4,0x9b,0xc1,0x29,0xfa,0xcc,0xa1,0xda,0x3c,0x94,0xa6,0xf4,0xaf,0xad,0xa4,0x6f,0x6e,0xd0,0x16,0x2f,0xac,0x6d,0xe1,0x95,0xfa,0xb9,0x98,0x7f,0x1c,0x38,0x2,0xc9,0x76,0x11,0xa4,0x94,0xa6,0xb7,0xc3,0xaa,0xa7,0x53,0x94,0x31,0xf2,0x67,0x90,0xea,0x3,0x6b,0x3e,0x80,0x76,0xbf,0x2e,0xf7,0x83,0x6d,0xd6,0xe3,0x10,0x5d,0xd4,0xc6,0xb2,0xa9,0x2,0x67,0x86,0x3f,0x6,0x5b,0x95,0xd4,0x11,0x4e,0xaa,0x4d,0xa2,0x73,0x33,0xa0,0xa,0xa9,0xf8,0x50,0xea,0x26,0x13,0x25,0xed,0xb,0x7c,0x8f,0x60,0xa4,0xa8,0x50,0x72,0x55,0x9c,0x45,0x1,0x65,0x1,0xdd,0x2,0xa7,0x9d,0x97,0xa8,0xc7,0x92,0x39,0x1c,0x93,0x35,0x5d,0xa3,0xe1,0x44,0x2a,0x91,0x36,0x54,0x5a,0x3e,0x16,0x25,0xa9,0x22,0x1e,0x21,0x1c,0xb4,0x54,0x9d,0x89,0x9c,0x7f,0x3e,0x57,0x19,0x17,0x2c,0x7d,0x3,0x17,0x64,0x58,0x4d,0x78,0xf2,0xd3,0x5e,0x5e,0x6d,0xe2,0x4e,0x5a,0x89,0xaf,0x7b,0xdd,0xe3,0xed,0xeb,0x88,0xfc,0x43,0x47,0xf6,0x94,0x99,0x5,0x7,0x3a,0xcf,0x59,0x95,0xae,0xd,0x18,0x18,0xb6,0x33,0x3d,0x94,0x4b,0x3a,0xba,0xb2,0x42,0xb6,0x39,0x1b,0x2d,0x6,0x2c,0xff,0xd2,0xcc,0x25,0xd4,0x26,0xf0,0x21,0xeb,0x2b,0xd6,0x87,0x50,0xa8,0xf4,0x19,0x84,0x37,0x37,0x63,0x67,0x13,0x76,0x16,0x61,0x85,0xd,0x90,0x21,0x72,0xa7,0x86,0x26,0x5b,0x6b,0x3b,0xd8,0x5c,0xa2,0x3e,0xff,0x46,0xfe,0x58,0xcb,0x38,0x0,0x23,0xf,0xd8,0x68,0x8a,0x5c,0xc1,0x76,0x6b,0x12,0x61,0xb1,0xde,0xc0,0x4b,0xaa,0xf7,0xd9,0x4b,0xac,0xc6,0x4d,0xeb,0x57,0x80,0x4e,0xf3,0xc4,0x71,0x73,0xf4,0xe3,};
  unsigned char ct[FPTRU_KEM_CIPHERTEXTBYTES] = {0};

  for (i = 0; i < NTESTS; i++)
  {
    //crypto_kem_keygen(pk, sk);
    crypto_kem_encaps(ct, k1, pk);

    for(int i=0;i<FPTRU_KEM_CIPHERTEXTBYTES;i++){
            printf("0x%x,",ct[i]);
        }
        printf("\n\n");

        printf("result k1\n");
        for(int i=0;i<FPTRU_SHAREDKEYBYTES;i++){
            printf("0x%x,",k1[i]);
        }
        printf("\n\n");


    crypto_kem_decaps(k2, ct, sk);

    // printf("result k2\n");
    //     for(int i=0;i<FPTRU_SHAREDKEYBYTES;i++){
    //         printf("0x%x,",k2[i]);
    //     }
    //     printf("\n\n");

    for (j = 0; j < FPTRU_SHAREDKEYBYTES; j++)
      if (k1[j] != k2[j])
      {
        printf("Round %d. Failure: Keys dont match: %hhx != %hhx!\n", i, k1[j], k2[j]);
        return;
      }
  }

  printf("FPTRU-%d-KEM is correct!\n", FPTRU_N);

  printf("Test %d times.\n\n", NTESTS);
  printf("FPTRU_N = %d, FPTRU_Q = %d, FPTRU_Q2 = %d\n", FPTRU_N, FPTRU_Q, FPTRU_Q2);
  printf("KEM size: pk = %d bytes, ct = %d bytes, bandwidth = %d bytes\n\n",
         FPTRU_KEM_PUBLICKEYBYTES, FPTRU_KEM_CIPHERTEXTBYTES,
         FPTRU_KEM_PUBLICKEYBYTES + FPTRU_KEM_CIPHERTEXTBYTES);
}
//int16_t coes1[FPTRU_N] = {163,112,338,590,221,381,1017,571,762,419,278,571,776,693,785,0,58,337,47,361,36,633,44,891,46,105,796,527,929,178,328,102,953,886,313,909,219,382,336,825,92,1021,278,377,744,312,316,695,294,251,138,653,860,308,681,407,456,304,231,44,205,527,459,143,602,301,321,305,875,277,392,797,1021,76,367,267,577,379,260,158,614,711,899,573,409,291,218,288,647,396,302,970,737,439,486,80,954,1013,906,472,639,708,332,520,555,868,29,967,244,998,793,652,271,75,396,454,141,97,986,40,693,352,404,528,162,1008,489,591,256,283,301,397,590,158,56,397,976,321,223,782,725,454,853,181,307,264,160,266,17,368,333,630,483,842,380,931,447,410,438,235,251,979,1018,670,632,463,177,544,787,156,823,791,459,731,909,894,687,748,491,220,288,710,728,775,490,1005,104,937,783,145,47,454,9,162,78,834,908,70,97,248,74,678,51,183,787,526,557,613,261,501,478,60,9,220,124,633,27,467,585,586,99,821,175,883,791,786,352,434,717,444,146,1020,55,299,626,839,340,498,513,743,877,882,299,586,451,952,238,231,905,637,612,196,582,107,262,74,614,332,380,16,493,205,968,556,2,629,514,942,23,890,840,742,977,860,255,152,345,609,940,560,633,50,843,357,558,632,555,75,710,953,962,542,224,147,94,382,1004,712,989,383,105,638,345,899,892,24,735,298,21,32,846,389,675,410,950,757,635,206,831,1003,384,870,787,329,493,736,408,46,750,639,409,956,244,250,734,815,497,117,730,114,16,462,676,7,786,655,324,768,693,229,892,520,768,108,414,751,269,486,88,392,324,534,639,800,349,964,590,656,574,863,601,783,315,499,229,925,136,657,901,1022,545,193,12,634,129,757,490,537,44,614,770,881,312,601,27,810,983,704,616,28,489,683,268,742,570,31,674,80,573,668,279,780,639,590,913,736,796,104,1014,411,296,93,7,532,832,764,464,724,801,127,626,598,310,576,144,617,390,163,544,353,498,841,976,387,870,252,946,242,694,203,702,544,378,8,747,370,701,641,927,1007,646,165,720,887,28,520,720,942,889,156,794,66,260,189,1005,85,23,84,869,86,526,364,111,756,400,94,612,943,549,47,667,958,301,969,706,200,763,105,920,970,1004,769,708,231,12,483,502,246,635,556,601,74,311,138,461,883,481,836,769,578,864,757,777,214,456,776,822,421,207,871,470,147,814,365,704,318,525,843,801,555,502,433,897,294,390,34,958,68,48,969,1011,382,463,107,71,794,825,549,829,864,1001,561,39,420,987,170,176,383,830,167,136,495,733,288,779,630,126,987,658,591,408,153,862,781,248,652,342,379,354,964,899,196,316,324,144,246,380,248,240,186,358,191,728,1,246,507,282,1016,727,621,963,385,783,61,339,406,682,40,954,196,830,29,449,698,56,535,131,382,102,885,930,273,223,884,52,560,922,538,907,36,863,589,425,674,771,981,572,43,457,848,851,908,950,997,815,770,894,587,692,840,500,377,558,251,970,907,205,886,524,101,412,406,479,284,483,854,834,1014,992,299,624,145,937,912,199,323,61,395,193,759,241,221,865,312,617,14,218,347,951,891,402,352,431,505,557,277,793,502,343,835,687,1004,850,770,374,774,86,443,651,1005,787,956,474,531,443,131,34,93,620,353,826,73,311,641,618,908,672,106,163,27,713,772,210,464,283,561,200,39,951,468,883,548,871,889,529,357,931,912,649,99,1019,128,671,94,70,229,180,346,335,302,803,810,633,334,32,735,425,113,631,747,206,46,562,643,792,526,564,191,254,408,521,465,894,108,427,782,663,376,725,966,276,578,154,39,369,830,752,179,176,876,1018,879,282,118,342,617,828,582,648,372,427,295,850,70,622,445,908,112,78,795,26,567,301,216,326,617,825,330,69,282,974,627,31,522,516,200,68,249,852,438,811,420,624,366,344,57,758,180,221,890,486,243,987,535,703,577,362,978,309,958,610,496,677,412,652,376,415,772,397,140,896,346,35,749,61,799,567,102,959,299,7,254,242,501,160,375,844,953,715,1009,130,381,289,165,730,107,481,494,222,61,959,550,825,72,479,46,6,391,671,276,210,511,911,581,581,342,386,170,998,466,663,866,584,136,350,431,869,942,448,921,213,946,933,263,355,984,774,209,189,314,164,857,43,1016,71,864,662,477,999,355,76,398,696,356,375,574,428,726,646,393,482,575,823,808,894,993,767,761,204,645,392,61,390,195,93,690,206,210,693,581,617,91,9,165,61,219,652,918,269,572,404,588,135,439,691,867,692,1007,138,64,410,81,713,585,332,320,524,35,469,829,536,818,448,409,749,434,806,575,568,649,375,980,144,471,916,684,1006,376,792,215,479,452,84,604,825,994,915,266,772,932,620,511,490,859,543,835,144,865,37,208,99,795,131,721,513,86,636,592,638,757,863,377,735,563,536,935,208,1015,627,980,1010,889,997,186,747,395,350,418,726,119,120,905,214,678,874,243,174,930,232,792,298,72,621,456,506,646,259,549,323,364,944,206,910,31,184,552,568,355,248,140,625,827,515,475,18,864,630,42,730,650,662,311,476,710,658,447,255,583,99,320,611,355,282,663,639,133,54,918,124,280,411,390,871,141,394,541,349,162,82,427,984,214,576,268,697,987,815,645,882,935,52,357,540,575,697,68,51,365,192,352,124,671,554,251,321,508,625,28,881,455,982,882,251,885,669,913,782,455,991,80,32,708,191,319,495,317,455,832,362,353,649,836,99,278,669,448,973,196,609,78,88,897,613,582,926,700,157,218,332,41,202,565,93,540,379,603,70,253,708,736,275,763,550,675,364,811,610,79,549,293,13,195,933,680,711,948,715,876,791,292,232,450,1010,774,48,87,549,250,136,906,97,402,644,0,16,0,0,};
//int16_t coes2[FPTRU_N] = {-3,-2,2,0,4,2,0,0,0,0,0,0,2,2,0,-2,-2,2,0,-4,2,4,0,-4,0,4,-4,2,-4,0,-2,0,2,0,0,-2,2,2,0,0,-2,-4,2,0,-4,0,0,-2,-2,0,-2,-2,0,0,-4,2,-2,-4,-4,2,-4,2,0,2,0,4,-2,0,2,-2,0,0,-2,0,0,0,0,-2,4,4,-2,0,0,2,-2,0,2,0,-4,0,2,4,-2,2,-2,2,-2,0,0,0,2,-2,2,-2,0,0,2,0,0,0,0,0,2,-2,0,-2,2,0,4,-2,-2,-4,0,4,-2,-2,0,-2,-2,-4,-2,4,2,-2,2,0,4,2,2,0,2,0,0,2,-2,-2,-2,0,4,2,4,0,0,0,-2,-2,2,0,0,2,-2,-2,2,2,2,0,-2,0,-2,2,-2,0,-2,2,4,0,0,4,0,2,-2,2,0,-4,0,0,0,-2,2,0,0,-2,0,0,0,2,4,-2,0,2,-4,-4,2,0,-2,2,-4,0,-4,2,0,0,0,-4,0,-2,0,4,0,0,0,4,0,-2,0,0,2,2,-2,0,2,-2,-2,0,0,0,0,-2,-2,-2,-2,0,0,0,0,0,4,-2,0,0,0,2,2,-4,4,-2,-2,0,0,0,0,2,2,4,0,0,0,0,2,-2,4,4,-4,4,4,0,0,-2,2,2,-2,-2,0,2,2,-2,-2,-2,0,2,2,2,0,0,4,-2,4,0,0,2,-4,-2,0,0,0,0,0,-2,0,2,-4,2,0,0,0,0,2,2,-4,0,2,-2,0,0,0,-2,0,0,-2,0,2,0,-2,2,0,-4,2,0,-2,4,2,-2,0,-2,0,2,0,2,0,2,2,4,2,4,2,2,0,2,0,2,-2,-2,-2,2,-2,-2,0,0,2,2,-2,2,0,2,0,4,2,0,0,-2,4,0,0,-2,2,0,0,-2,0,2,2,4,2,2,-2,2,0,4,-2,2,0,4,-2,0,0,2,-2,-2,-2,-2,0,-2,0,-4,-2,0,0,-2,-2,2,0,0,0,2,-2,0,-2,-4,0,-2,0,2,-2,2,0,-2,0,0,2,2,-2,-2,0,2,0,0,0,-2,-2,0,-2,2,-2,-2,0,2,0,0,-4,0,0,0,0,0,0,0,-2,-2,0,-2,0,2,-2,2,0,-2,4,0,2,0,4,0,-2,2,-4,0,2,-2,2,-4,0,-4,-4,0,-2,-2,2,-2,-2,-2,0,0,0,2,2,2,-4,0,0,0,-4,-2,0,-2,0,0,0,-2,0,-2,0,0,2,2,-2,-4,0,-4,0,0,-2,-2,4,-4,0,0,0,2,0,0,0,0,-2,2,-2,2,0,0,2,-2,2,-2,-4,0,2,0,0,2,0,4,0,0,0,2,2,0,0,0,0,2,-2,-2,4,2,0,4,-2,-4,-2,0,2,0,-2,0,2,4,-2,0,-2,-2,2,0,2,2,0,2,4,4,0,-2,-2,2,2,-2,0,2,-2,2,0,2,-4,0,0,4,0,0,0,2,0,-2,-2,2,2,-4,0,0,0,4,0,0,0,4,0,2,-2,0,-2,2,0,-2,0,2,2,2,0,2,2,0,0,0,-2,0,-2,-2,2,0,2,0,0,0,0,-2,0,0,0,-2,2,0,4,2,0,0,2,0,-4,0,2,0,0,0,0,0,-2,2,0,-2,4,0,-2,2,2,0,0,2,2,2,-4,2,2,2,0,2,0,0,0,-2,0,4,-2,4,-4,2,-2,2,2,2,-2,2,2,2,0,2,-4,2,2,2,2,-2,0,2,0,0,0,0,-2,2,-2,-2,0,-2,-2,-2,0,0,4,4,-4,0,-2,4,-2,0,0,2,0,2,0,4,-2,2,2,2,4,4,2,0,0,0,0,0,4,2,2,-2,-2,0,0,-2,4,2,0,-4,2,-2,2,-2,-4,-4,2,0,-2,2,0,0,0,-2,0,2,0,0,0,0,0,2,-4,2,0,-2,2,0,-2,2,-2,-2,0,0,-2,2,2,-2,0,4,0,0,-4,-4,2,-2,0,-2,-2,0,0,-2,0,-4,2,-2,-2,0,2,-2,2,2,0,-4,2,2,0,0,0,-2,0,2,2,0,0,0,0,2,2,2,-2,-2,2,2,0,-2,0,0,2,2,2,0,2,0,2,-4,4,4,2,2,-2,0,4,4,0,0,0,2,-2,2,0,0,2,2,-2,0,-4,2,0,0,0,2,0,-2,0,-2,2,-4,0,-2,0,2,-4,-2,-2,0,-2,-2,-2,0,-4,0,0,0,-4,0,-2,0,-2,2,2,0,-2,0,0,-4,-2,2,0,0,0,0,0,-4,0,0,0,-2,-2,0,0,0,2,0,-2,0,0,0,2,0,0,4,-2,4,4,-2,0,2,-2,2,2,-2,2,0,-2,0,2,0,2,-4,-2,-2,-2,-4,0,-4,2,2,2,0,0,0,0,-2,0,-4,0,-2,4,0,0,-2,2,-4,0,2,0,0,-2,2,0,-2,-2,4,-2,-4,-2,-2,0,0,-4,-2,0,-2,-2,0,0,2,0,2,4,2,2,0,-2,2,0,0,0,0,2,-2,0,-2,0,0,-2,2,0,2,0,2,2,0,-2,2,-2,-2,0,-2,0,-2,0,0,0,0,0,0,0,0,4,0,-2,2,2,0,-4,0,-2,-2,0,0,0,0,-2,2,2,-4,0,2,0,4,2,0,-2,-4,2,0,2,-2,0,2,-2,-2,0,2,0,-2,0,-4,0,-2,-2,2,4,0,-4,2,0,-4,0,-2,-2,0,0,-4,-2,0,2,-4,0,0,0,2,2,0,-2,0,2,2,-4,2,2,-2,-2,0,0,2,-2,2,-2,4,2,-2,2,0,4,-2,0,0,0,0,2,-2,-2,-4,0,0,0,-2,2,2,2,-2,2,0,0,4,0,0,2,-2,0,-2,-2,2,-2,2,2,-4,2,4,2,4,4,0,2,-4,0,-2,0,-2,0,-2,4,-4,2,2,-4,-4,0,-4,0,2,0,-4,-2,0,0,0,0,0,-4,2,0,-4,0,2,0,0,-2,4,2,2,0,0,-2,-4,-4,0,2,4,0,0,0,0,2,0,-4,0,0,2,-2,4,0,0,-2,2,-2,-4,0,0,0,-2,-2,-2,0,2,-4,-2,-2,2,2,2,4,};
// void test_ntt(){
//   printf("start ntt\n");
//   poly a,b,c;
//   for(int i=0;i<FPTRU_N;i++){
//     a.coeffs[i]=coes1[i];
//     b.coeffs[i]=coes2[i];
//   }
//   poly_mul_q2(&c,&a,&b);
//   for(int i=0;i<FPTRU_N;i++){
//     printf("%d,",c.coeffs[i]);
//   }
//   printf("\n");
// }
int main()
{
  //test_ntt();
  test_kem();
  return 0;
}
